import "primeicons/primeicons.css";
import "primereact/resources/themes/saga-blue/theme.css";
import "primereact/resources/primereact.css";
import "primeflex/primeflex.css";
import "./../src/index.css";
import React, { useState, useEffect } from "react";
import { Knob } from "primereact/knob";
import { Button } from "primereact/button";
import { Mention } from "primereact/mention";
import { CustomerService } from "../src/services/CustomerService";
function App() {
  const [value3, setValue3] = useState(88);
  const [value4, setValue4] = useState(88);
  const [customers, setCustomers] = useState([]);
  const [suggestions, setSuggestions] = useState([]);
  const customerservice = new CustomerService();
  useEffect(() => {
    customerservice.getCustomersSmall().then((data) => {
      data.forEach(
        (d) =>
          (d["nickname"] = `${d.name.replace(/\s+/g, "").toLowerCase()}_${
            d.id
          }`)
      );
      setCustomers(data);
      console.log(data);
    });
  // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);
  const onSearch = (event) => {
    //in a real application, make a request to a remote url with the query and return suggestions, for demo we filter at client side
    setTimeout(() => {
      const query = event.query;
      let suggestions;

      if (!query.trim().length) {
        suggestions = [...customers];
      } else {
        suggestions = customers.filter((customer) => {
          return customer.nickname
            .toLowerCase()
            .startsWith(query.toLowerCase());
        });
      }

      setSuggestions(suggestions);
    }, 250);
  };
  const itemTemplate = (suggestion) => {
    const src =
      "showcase/demo/images/avatar/" + suggestion.representative.image;

    return (
      <div className="p-d-flex p-ai-center">
        <img
          alt={suggestion.name}
          src={src}
          onError={(e) =>
            (e.target.src =
              "https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png")
          }
          width="32"
          style={{ verticalAlign: "middle" }}
        />
        <span className="p-d-flex p-dir-col p-ml-2">
          {suggestion.name}
          <small
            style={{ fontSize: ".75rem", color: "var(--text-secondary-color)" }}
          >
            @{suggestion.nickname}
          </small>
        </span>
      </div>
    );
  };
  return (
    <div className="App">
      <div className="card">
        <div
          className="p-grid p-formgrid p-text-center"
          style={{ marginLeft: 50 }}
        ></div>
        <div className="p-field p-col-12 p-md-4">
          <h5>Step Knob </h5>
          <Knob
            value={value3}
            step={10}
            onChange={(e) => {
              setValue3(e.value);
            }}
          ></Knob>
        </div>
        <div className="p-field p-col-12 p-md-4">
          <h5>Template Knob</h5>
          <Knob
            value={value4}
            onChange={(e) => {
              setValue4(e.value);
            }}
            valueTemplate={"{value}%"}
          ></Knob>
        </div>
        <div className="p-file p-col-12 p-md-4">
          <h5>Demo Mention User</h5>
          <Mention
            suggestions={suggestions}
            onSearch={onSearch}
            field="nickname"
            placeholder="Please enter @ to mention people"
            rows={5}
            cols={40}
            itemTemplate={itemTemplate}
          />
        </div>
      </div>
    </div>
  );
}

export default App;
